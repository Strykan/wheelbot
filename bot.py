import logging
import os
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–π

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü—Ä–∏–∑–æ–≤—ã–µ —Å–µ–∫—Ç–æ—Ä–∞ –ö–æ–ª–µ—Å–∞ —Ñ–æ—Ä—Ç—É–Ω—ã
PRIZES = [
    "100 —Ä—É–±–ª–µ–π",
    "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞",
    "5 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫",
    "10 —Ä—É–±–ª–µ–π",
    "–ö–æ–Ω—Ñ–µ—Ç–∫–∞",
    "–ù–∏—á–µ–≥–æ",
    "5 —Ä—É–±–ª–µ–π",
    "–°–∫–∏–¥–∫–∞ 10% –Ω–∞ —Å–ª–µ–¥. –∏–≥—Ä—É",
    "–ü–æ–¥–∞—Ä–æ–∫"
]

# –ö–æ–º–∞–Ω–¥–∞ start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /play. "
        "–¢—ã –º–æ–∂–µ—à—å –≤—ã–∏–≥—Ä–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏–∑—ã, –Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∑–∞ –ø–æ–ø—ã—Ç–∫—É. "
        "–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ–ø–ª–∞—Ç–∏—à—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –∏ —è –ø–æ–¥—Ç–≤–µ—Ä–∂—É —Ç–≤–æ—é –æ–ø–ª–∞—Ç—É."
    )

# –ö–æ–º–∞–Ω–¥–∞ play
async def play(update: Update, context: CallbackContext):
    await update.message.reply_text(
        f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å, –ø–µ—Ä–µ–≤–µ–¥–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n"
        f"–°—É–º–º–∞: 100 —Ä—É–±–ª–µ–π\n\n"
        f"–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ. –Ø –ø—Ä–æ–≤–µ—Ä—é –∏ –¥–∞–º —Ç–µ–±–µ –ø–æ–ø—ã—Ç–∫–∏!"
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–ª–µ—Å–∞ —Ñ–æ—Ä—Ç—É–Ω—ã
async def spin_wheel(update: Update, context: CallbackContext):
    prize = random.choice(PRIZES)  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–∑
    await update.message.reply_text(
        f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –≤—ã–∏–≥—Ä–∞–ª: {prize} üéâ"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π (—Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã)
async def handle_receipt(update: Update, context: CallbackContext):
    if update.message.photo or update.message.document:
        caption = f"–ß–µ–∫ –æ—Ç @{update.effective_user.username} (ID: {update.effective_user.id})"
        if update.message.photo:
            await context.bot.send_photo(
                chat_id=ADMIN_ID,
                photo=update.message.photo[-1].file_id,
                caption=caption
            )
        elif update.message.document:
            await context.bot.send_document(
                chat_id=ADMIN_ID,
                document=update.message.document.file_id,
                caption=caption
            )
        await update.message.reply_text("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —á–µ–∫ –æ –ø–ª–∞—Ç–µ–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
async def confirm_payment(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    if user_id == int(ADMIN_ID):  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        if context.args:
            message = ' '.join(context.args)
            if message.lower() == '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
                await update.message.reply_text(f"–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø–æ–ø—ã—Ç–∫–∏!")
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                await spin_wheel(update, context)
            else:
                await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /confirm_payment –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.")
        else:
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /confirm_payment —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

# –û—à–∏–±–∫–∏
async def error(update: Update, context: CallbackContext):
    logger.warning(f'Update {update} caused error {context.error}')

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("play", play))
    application.add_handler(CommandHandler("confirm_payment", confirm_payment))  # –£–±–∏—Ä–∞–µ–º pass_args
    application.add_handler(MessageHandler(filters.PHOTO, handle_receipt))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    application.add_handler(MessageHandler(filters.Document(), handle_receipt))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    application.add_error_handler(error)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
